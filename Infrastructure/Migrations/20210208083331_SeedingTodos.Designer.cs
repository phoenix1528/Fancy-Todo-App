// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210208083331_SeedingTodos")]
    partial class SeedingTodos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Domain.Todo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa9025ee-3b16-4fb2-97c1-356c69bda994"),
                            Category = "Sports Activity",
                            City = "Klosterneuburg",
                            Description = "Laufen 2km",
                            EndDate = new DateTime(2021, 2, 7, 20, 52, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 2, 7, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            Venue = "Laufen 2km"
                        },
                        new
                        {
                            Id = new Guid("e48e9092-0bb3-4eea-9481-df59d23e8b7a"),
                            Category = "Work",
                            City = "Wien",
                            Description = "Arbeiten im Büro",
                            EndDate = new DateTime(2021, 2, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 2, 1, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Venue = "Working at the office"
                        },
                        new
                        {
                            Id = new Guid("5ea6673e-ff84-42d0-8bc8-cf343b3a1ffe"),
                            Category = "Sports Activity",
                            City = "Klosterneuburg",
                            Description = "Training mit Klimmzugstange",
                            EndDate = new DateTime(2021, 2, 7, 20, 15, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 2, 7, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Venue = "Training mit Klimmzugstange"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
