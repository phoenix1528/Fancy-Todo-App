[{"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx":"1","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx":"2","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx":"3","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoDashboard.tsx":"4","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoList.tsx":"5","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Details\\TodoDetails.tsx":"6","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoDashboard.tsx":"7","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoList.tsx":"8","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\details\\TodoDetails.tsx":"9","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\form\\TodoForm.tsx":"10"},{"size":231,"mtime":1614072150472,"results":"11","hashOfConfig":"12"},{"size":730,"mtime":1614197746194,"results":"13","hashOfConfig":"12"},{"size":1272,"mtime":1614073111983,"results":"14","hashOfConfig":"12"},{"size":543,"mtime":1614079828701,"results":"15","hashOfConfig":"12"},{"size":1233,"mtime":1614079012687,"results":"16","hashOfConfig":"12"},{"size":1326,"mtime":1614079876686,"results":"17","hashOfConfig":"12"},{"size":607,"mtime":1614200444517,"results":"18","hashOfConfig":"12"},{"size":1233,"mtime":1614199191447,"results":"19","hashOfConfig":"12"},{"size":1306,"mtime":1614199843075,"results":"20","hashOfConfig":"12"},{"size":2368,"mtime":1614200726758,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"5kusr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx",[],["47","48"],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx",[],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx",["49"],"import React from \"react\";\r\nimport toDoList from \"../../to-do-list.svg\";\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n      <a className=\"navbar-brand\" href=\"http://localhost:8000/\">\r\n        <img\r\n          src={toDoList}\r\n          style={{ color: \"blue\", height: \"30px\", width: \"30px\" }}\r\n        ></img>\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"http://localhost:8000/\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <button className=\"btn btn-outline-success\" type=\"button\">\r\n              Create Todo\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoDashboard.tsx",[],["50","51"],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoList.tsx",["52"],"import React from \"react\";\r\nimport { ITodo } from \"../../../app/models/ITodo\";\r\nimport sports from \"../../../../src/sports.jpg\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  todos: ITodo[];\r\n}\r\n\r\nexport default function TodoList({ todos }: Props) {\r\n  return (\r\n    <section>\r\n      {todos.map((todo) => (\r\n        <div className=\"card mt-3\" key={todo.id}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{todo.title}</h5>\r\n            <p className=\"card-text\">{todo.description}</p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">\r\n                Von {format(new Date(todo.startDate), \"dd MMM yyyy HH:mm\")} bis{\" \"}\r\n                {format(new Date(todo.endDate), \"dd MMM yyyy HH:mm\")}\r\n              </small>\r\n            </p>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <button className=\"btn btn-primary\">Details</button>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"card-img-bottom\"\r\n            src={sports}\r\n            style={{ color: \"blue\", height: \"200px\", width: \"auto\" }}\r\n            alt=\"Card image cap\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Details\\TodoDetails.tsx",["53"],"import React from \"react\";\r\nimport sports from \"../../../../src/sports.jpg\";\r\nimport { ITodo } from \"../../../app/models/ITodo\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n    todo: ITodo;\r\n}\r\n\r\nexport default function TodoDetails({todo}: Props) {\r\n  return (\r\n    <section className=\"card mt-3\" style={{ width: \"18rem\" }}>\r\n      <img className=\"card-img-top\" src={sports} alt=\"Card image cap\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{todo.title}</h5>\r\n        <p className=\"card-text\">\r\n        {todo.description}\r\n        </p>\r\n      </div>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item\">{todo.category}</li>\r\n        <li className=\"list-group-item\">{todo.city}</li>\r\n        <li className=\"list-group-item\">{todo.venue}</li>\r\n        <li className=\"list-group-item\">Von {format(new Date(todo.startDate), \"dd MMM yyyy HH:mm\")}</li>\r\n        <li className=\"list-group-item\">bis {format(new Date(todo.endDate), \"dd MMM yyyy HH:mm\")}</li>\r\n      </ul>\r\n      <div className=\"card-body d-flex justify-content-between\">\r\n        <button className=\"btn btn-success\">\r\n          Edit Todo\r\n        </button>\r\n        <button className=\"btn btn-danger\">\r\n          Delete Todo\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoDashboard.tsx",[],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoList.tsx",["54"],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\details\\TodoDetails.tsx",["55"],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\form\\TodoForm.tsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":9,"nodeType":"62","endLine":11,"endColumn":10},{"ruleId":"56","replacedBy":"63"},{"ruleId":"58","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":28,"column":11,"nodeType":"62","endLine":33,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":13,"column":7,"nodeType":"62","endLine":13,"endColumn":73},{"ruleId":"65","severity":1,"message":"66","line":28,"column":11,"nodeType":"62","endLine":33,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":13,"column":7,"nodeType":"62","endLine":13,"endColumn":73},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["67"],["68"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]