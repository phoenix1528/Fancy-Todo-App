[{"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx":"1","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx":"2","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\api\\agent.ts":"3","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx":"4","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoDashboard.tsx":"5","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoList.tsx":"6","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\details\\TodoDetails.tsx":"7","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\form\\TodoForm.tsx":"8","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\LoadingComponent.tsx":"9"},{"size":242,"mtime":1617048702464,"results":"10","hashOfConfig":"11"},{"size":2684,"mtime":1617051345588,"results":"12","hashOfConfig":"11"},{"size":1316,"mtime":1617050594145,"results":"13","hashOfConfig":"11"},{"size":1447,"mtime":1617048702465,"results":"14","hashOfConfig":"11"},{"size":1399,"mtime":1617050279688,"results":"15","hashOfConfig":"11"},{"size":1538,"mtime":1617048702464,"results":"16","hashOfConfig":"11"},{"size":1503,"mtime":1617048702464,"results":"17","hashOfConfig":"11"},{"size":4210,"mtime":1617050279723,"results":"18","hashOfConfig":"11"},{"size":201,"mtime":1617048583792,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pg2tfe",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx",[],"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx",["41"],"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\api\\agent.ts",[],"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx",[],["42","43"],"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoDashboard.tsx",[],"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoList.tsx",["44"],"import React from \"react\";\r\nimport { ITodo } from \"../../../app/models/ITodo\";\r\nimport sports from \"../../../../src/sports.jpg\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  todos: ITodo[];\r\n  selectTodo: (id: string) => void;\r\n  deleteTodo: (id: string) => void;\r\n}\r\n\r\nexport default function TodoList({ todos, selectTodo, deleteTodo }: Props) {\r\n  return (\r\n    <section>\r\n      {todos.map((todo) => (\r\n        <div className=\"card mt-3\" key={todo.id}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{todo.title}</h5>\r\n            <p className=\"card-text\">{todo.description}</p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">\r\n                Von {todo.startDate} bis {todo.endDate}\r\n              </small>\r\n            </p>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => deleteTodo(todo.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => selectTodo(todo.id)}\r\n              >\r\n                Details\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"card-img-bottom\"\r\n            src={sports}\r\n            style={{ color: \"blue\", height: \"200px\", width: \"auto\" }}\r\n            alt=\"sports category\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\details\\TodoDetails.tsx",[],"C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\form\\TodoForm.tsx",["45"],"import React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { ITodo } from '../../../app/models/ITodo';\r\nimport { format } from 'date-fns';\r\n\r\ninterface IProps {\r\n  todo: ITodo | undefined;\r\n  closeForm: () => void;\r\n  createTodo: (todo: ITodo) => void;\r\n}\r\n\r\nfunction TodoForm({ todo: selectedTodo, closeForm, createTodo }: IProps) {\r\n  const initialState = selectedTodo ?? {\r\n    id: '',\r\n    title: '',\r\n    description: '',\r\n    endDate: '',\r\n    startDate: '',\r\n    category: '',\r\n    city: '',\r\n    venue: '',\r\n  };\r\n\r\n  const [todo, setTodo] = useState(initialState);\r\n\r\n  function handleSubmit(event: FormEvent) {\r\n    event?.preventDefault();\r\n    console.log(todo);\r\n    createTodo(todo);\r\n  }\r\n\r\n  function handleIputChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    const { name, value } = event.target;\r\n    setTodo({ ...todo, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <section className='card mt-3'>\r\n      <form className='card-body' onSubmit={handleSubmit} autoComplete='off'>\r\n        <div>\r\n          <h5 className='card-title'>Edit Todo</h5>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='form-group col-md-12'>\r\n            <label htmlFor='title'>Title</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              id='title'\r\n              placeholder='My Todo'\r\n              value={todo.title}\r\n              name='title'\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='form-group col-md-12'>\r\n            <label htmlFor='description'>Description</label>\r\n            <textarea\r\n              className='form-control'\r\n              id='description'\r\n              placeholder='Todo description'\r\n              value={todo.description}\r\n              name='description'\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='category'>Category</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            id='category'\r\n            placeholder='Sports Activity'\r\n            value={todo.category}\r\n            name='category'\r\n            onChange={handleIputChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='startDate'>Start Date</label>\r\n          <input\r\n            type='date'\r\n            className='form-control'\r\n            id='startDate'\r\n            value={todo.startDate}\r\n            name='startDate'\r\n            onChange={handleIputChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='endDate'>End Date</label>\r\n          <input\r\n            type='date'\r\n            className='form-control'\r\n            id='endDate'\r\n            value={todo.endDate}\r\n            name='endDate'\r\n            onChange={handleIputChange}\r\n          />\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='form-group col-md-6'>\r\n            <label htmlFor='city'>City</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              id='city'\r\n              value={todo.city}\r\n              name='city'\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n          <div className='form-group col-md-4'>\r\n            <label htmlFor='venue'>Venue</label>\r\n            <input\r\n              type='text'\r\n              id='venue'\r\n              className='form-control'\r\n              placeholder='Forest'\r\n              value={todo.venue}\r\n              name='venue'\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='d-flex justify-content-between'>\r\n          <button onClick={closeForm} className='btn btn-danger'>\r\n            Cancel\r\n          </button>\r\n          <button type='submit' className='btn btn-primary'>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","C:\\Users\\Stefan\\source\\repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\LoadingComponent.tsx",[],{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":16},{"ruleId":"46","severity":1,"message":"54","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":16},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'format' is defined but never used.","no-global-assign","no-unsafe-negation"]