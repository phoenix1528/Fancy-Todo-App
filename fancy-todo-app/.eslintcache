[{"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx":"1","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx":"2","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx":"3","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoDashboard.tsx":"4","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoList.tsx":"5","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Details\\TodoDetails.tsx":"6","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoDashboard.tsx":"7","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoList.tsx":"8","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\details\\TodoDetails.tsx":"9","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\form\\TodoForm.tsx":"10"},{"size":231,"mtime":1614072150472,"results":"11","hashOfConfig":"12"},{"size":2149,"mtime":1614256667375,"results":"13","hashOfConfig":"12"},{"size":1447,"mtime":1614252392566,"results":"14","hashOfConfig":"12"},{"size":543,"mtime":1614079828701,"results":"15","hashOfConfig":"12"},{"size":1233,"mtime":1614079012687,"results":"16","hashOfConfig":"12"},{"size":1326,"mtime":1614079876686,"results":"17","hashOfConfig":"12"},{"size":1399,"mtime":1614256704922,"results":"18","hashOfConfig":"12"},{"size":1638,"mtime":1614256540219,"results":"19","hashOfConfig":"12"},{"size":1503,"mtime":1614249966306,"results":"20","hashOfConfig":"12"},{"size":4214,"mtime":1614256579825,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"5kusr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx",[],["47","48"],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx",[],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx",[],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoDashboard.tsx",[],["49","50"],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Dashboard\\TodoList.tsx",["51"],"import React from \"react\";\r\nimport { ITodo } from \"../../../app/models/ITodo\";\r\nimport sports from \"../../../../src/sports.jpg\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  todos: ITodo[];\r\n}\r\n\r\nexport default function TodoList({ todos }: Props) {\r\n  return (\r\n    <section>\r\n      {todos.map((todo) => (\r\n        <div className=\"card mt-3\" key={todo.id}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{todo.title}</h5>\r\n            <p className=\"card-text\">{todo.description}</p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">\r\n                Von {format(new Date(todo.startDate), \"dd MMM yyyy HH:mm\")} bis{\" \"}\r\n                {format(new Date(todo.endDate), \"dd MMM yyyy HH:mm\")}\r\n              </small>\r\n            </p>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <button className=\"btn btn-primary\">Details</button>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"card-img-bottom\"\r\n            src={sports}\r\n            style={{ color: \"blue\", height: \"200px\", width: \"auto\" }}\r\n            alt=\"Card image cap\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\Details\\TodoDetails.tsx",["52"],"import React from \"react\";\r\nimport sports from \"../../../../src/sports.jpg\";\r\nimport { ITodo } from \"../../../app/models/ITodo\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n    todo: ITodo;\r\n}\r\n\r\nexport default function TodoDetails({todo}: Props) {\r\n  return (\r\n    <section className=\"card mt-3\" style={{ width: \"18rem\" }}>\r\n      <img className=\"card-img-top\" src={sports} alt=\"Card image cap\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{todo.title}</h5>\r\n        <p className=\"card-text\">\r\n        {todo.description}\r\n        </p>\r\n      </div>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item\">{todo.category}</li>\r\n        <li className=\"list-group-item\">{todo.city}</li>\r\n        <li className=\"list-group-item\">{todo.venue}</li>\r\n        <li className=\"list-group-item\">Von {format(new Date(todo.startDate), \"dd MMM yyyy HH:mm\")}</li>\r\n        <li className=\"list-group-item\">bis {format(new Date(todo.endDate), \"dd MMM yyyy HH:mm\")}</li>\r\n      </ul>\r\n      <div className=\"card-body d-flex justify-content-between\">\r\n        <button className=\"btn btn-success\">\r\n          Edit Todo\r\n        </button>\r\n        <button className=\"btn btn-danger\">\r\n          Delete Todo\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoDashboard.tsx",[],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\dashboard\\TodoList.tsx",[],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\details\\TodoDetails.tsx",[],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\form\\TodoForm.tsx",["53"],"import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { ITodo } from \"../../../app/models/ITodo\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface IProps {\r\n  todo: ITodo | undefined;\r\n  closeForm: () => void;\r\n  createTodo: (todo: ITodo) => void;\r\n}\r\n\r\nfunction TodoForm({ todo: selectedTodo, closeForm, createTodo }: IProps) {\r\n  const initialState = selectedTodo ?? {\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    endDate: \"\",\r\n    startDate: \"\",\r\n    category: \"\",\r\n    city: \"\",\r\n    venue: \"\",\r\n  };\r\n\r\n  const [todo, setTodo] = useState(initialState);\r\n\r\n  function handleSubmit(event: FormEvent) {\r\n    event?.preventDefault();\r\n    console.log(todo);\r\n    createTodo(todo);\r\n  }\r\n\r\n  function handleIputChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    const { name, value } = event.target;\r\n    setTodo({ ...todo, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <section className=\"card mt-3\">\r\n      <form className=\"card-body\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <div>\r\n          <h5 className=\"card-title\">Edit Todo</h5>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              placeholder=\"My Todo\"\r\n              value={todo.title}\r\n              name=\"title\"\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              placeholder=\"Todo description\"\r\n              value={todo.description}\r\n              name=\"description\"\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"category\">Category</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"category\"\r\n            placeholder=\"Sports Activity\"\r\n            value={todo.category}\r\n            name=\"category\"\r\n            onChange={handleIputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"startDate\">Start Date</label>\r\n          <input\r\n            type=\"string\"\r\n            className=\"form-control\"\r\n            id=\"startDate\"\r\n            value={todo.startDate}\r\n            name=\"startDate\"\r\n            onChange={handleIputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"endDate\">End Date</label>\r\n          <input\r\n            type=\"string\"\r\n            className=\"form-control\"\r\n            id=\"endDate\"\r\n            value={todo.endDate}\r\n            name=\"endDate\"\r\n            onChange={handleIputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"city\">City</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"city\"\r\n              value={todo.city}\r\n              name=\"city\"\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"venue\">Venue</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"venue\"\r\n              className=\"form-control\"\r\n              placeholder=\"Forest\"\r\n              value={todo.venue}\r\n              name=\"venue\"\r\n              onChange={handleIputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <button onClick={closeForm} className=\"btn btn-danger\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":28,"column":11,"nodeType":"62","endLine":33,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":13,"column":7,"nodeType":"62","endLine":13,"endColumn":73},{"ruleId":"63","severity":1,"message":"64","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":16},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'format' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]