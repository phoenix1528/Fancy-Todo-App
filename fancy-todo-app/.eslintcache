[{"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx":"1","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx":"2","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx":"3","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\TodoDashboard.tsx":"4"},{"size":231,"mtime":1613980737087,"results":"5","hashOfConfig":"6"},{"size":759,"mtime":1614010943765,"results":"7","hashOfConfig":"6"},{"size":958,"mtime":1614010073672,"results":"8","hashOfConfig":"6"},{"size":834,"mtime":1614010997196,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"5kusr",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\index.tsx",[],["21","22"],"C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\App.tsx",["23"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport toDoList from \"../../to-do-list.svg\";\nimport axios from \"axios\";\nimport NavBar from \"./Navbar\";\nimport TodoDashboard from \"../../features/todos/TodoDashboard\";\nimport { ITodo } from '../../app/models/ITodo';\n\nfunction App() {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    axios\n      .get<ITodo[]>(\"https://localhost:44326/api/todo/list\")\n      .then((response) => {\n        console.log(response);\n\n        setTodos(response.data);\n        console.log(\"todos were set\");\n      });\n  }, []);\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"row\">\n        <TodoDashboard todos={todos} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\app\\layout\\Navbar.tsx",["24","25"],"import React from 'react';\r\n\r\nexport default function NavBar(){\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <button className=\"btn btn-outline-success\" type=\"button\">Create Todo</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n}","C:\\Repos\\Fancy-Todo-App\\fancy-todo-app\\src\\features\\todos\\TodoDashboard.tsx",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":6,"column":9,"nodeType":"36","endLine":6,"endColumn":46},{"ruleId":"34","severity":1,"message":"35","line":13,"column":15,"nodeType":"36","endLine":13,"endColumn":48},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'toDoList' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]